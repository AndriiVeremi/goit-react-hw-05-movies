{"version":3,"file":"static/js/134.afd038f6.chunk.js","mappings":"mPA2EA,UArEe,WAAO,IAAD,EACnB,GAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAc,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GA0BpD,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,gHAECC,EAAAA,EAAAA,IAAYJ,GAFb,OAEZK,EAFY,OAGZC,EAAWD,EAAKA,KAAKE,QAC3Bb,EAAcY,GAJI,gDAMlBE,QAAQC,MAAM,SANI,yDAAH,qDASnBN,GACD,GAAE,CAACH,KAGF,iCACI,SAAC,KAAD,UAAM,kBACN,UAAC,KAAD,CAAMU,SAvBS,SAAAC,GACnBA,EAAMC,iBACiB,KAAvBrB,EAAYsB,OACVC,MAAM,yCACNf,EAAgB,CAAEgB,MAAOxB,GAC5B,EAkBK,WACE,SAAC,KAAD,CACEyB,KAAK,OACLC,MAAO1B,EACP2B,SA/BW,SAAAP,GACnBnB,EAAemB,EAAMQ,OAAOF,MAAMG,cACnC,EA8BSC,YAAY,mBAEd,SAAC,KAAD,CAAKL,KAAK,SAAV,SAAmB,eAGvB,SAAC,KAAD,UACGvB,GACCA,EAAW6B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACb,SAAC,KAAD,WACE,UAAC,KAAD,CAAmBC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMjC,GAAvD,WACE,SAAC,KAAD,CACEkC,IACEJ,EAAW,0CAC4BA,GACnCK,EAENC,IAAKP,EACLQ,MAAM,MACNC,OAAO,UAET,SAAC,KAAD,UAAOT,MAXMD,IADFA,EADF,QAoBxB,C,+LCvEKW,EAAW,gCACXC,EAAU,mCAGHC,EAAe,mCAAG,sGAErBC,EAFqB,UAENH,EAFM,uCAEiCC,GAFjC,SAGJG,EAAAA,EAAAA,IAAUD,GAHN,cAGrBE,EAHqB,yBAIpBA,GAJoB,gCAM3B/B,QAAQC,MAAM,4BANa,yDAAH,qDAWfL,EAAW,mCAAG,WAAOb,GAAP,yFAEjB8C,EAFiB,UAEFH,EAFE,iCAE+BC,EAF/B,kBAEgD5C,GAFhD,SAGA+C,EAAAA,EAAAA,IAAUD,GAHV,cAGjBE,EAHiB,yBAIhBA,GAJgB,gCAMvB/B,QAAQC,MAAM,4BANS,yDAAH,sDAWX+B,EAAW,mCAAG,WAAOC,GAAP,yFAEjBJ,EAFiB,UAEFH,EAFE,iBAEeO,EAFf,oBAEkCN,GAFlC,SAGAG,EAAAA,EAAAA,IAAUD,GAHV,cAGjBE,EAHiB,yBAIhBA,GAJgB,gCAMvB/B,QAAQC,MAAM,4BANS,yDAAH,sDAWXiC,EAAW,mCAAG,WAAOD,GAAP,yFAEjBJ,EAFiB,UAEFH,EAFE,iBAEeO,EAFf,4BAE0CN,GAF1C,SAGAG,EAAAA,EAAAA,IAAUD,GAHV,cAGjBE,EAHiB,yBAIhBA,GAJgB,gCAMvB/B,QAAQC,MAAM,4BANS,yDAAH,sDAWXkC,EAAc,mCAAG,WAAOF,GAAP,yFAEpBJ,EAFoB,UAELH,EAFK,iBAEYO,EAFZ,4BAEuCN,GAFvC,SAGHG,EAAAA,EAAAA,IAAUD,GAHP,cAGpBE,EAHoB,yBAInBA,GAJmB,gCAM1B/B,QAAQC,MAAM,4BANY,yDAAH,qD","sources":["pages/Movies.jsx","serviceAPI/serviceAPI.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport DefaultImg from '../images/noImageV.jpg';\nimport { getMoveName } from '../serviceAPI/serviceAPI';\nimport {Titl, Form, Input, Btn, FilmList, FilmItem, FilmLink, Img, Name} from '../styled/styled';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchMove, setSearchMove] = useState([]);\n\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchMoveName = searchParams.get('query') ?? '';\n\n  const handleSearch = event => {\n    setSearchQuery(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    searchQuery.trim() === ''\n    ? alert('enter the name of the movie to search') \n    : setSearchParams({ query: searchQuery });   \n  };\n\n  useEffect(() => {\n    const trendingMoves = async () => {\n      try {\n        const data = await getMoveName(searchMoveName);\n        const newMovis = data.data.results;\n        setSearchMove(newMovis);\n      } catch (error) {\n        console.error('error');\n      }\n    };\n    trendingMoves();\n  }, [searchMoveName]);\n\n  return (\n    <>    \n        <Titl>Search Films</Titl>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            type=\"text\"\n            value={searchQuery}\n            onChange={handleSearch}\n            placeholder=\"Search movies\"\n          />\n          <Btn type=\"submit\">Search</Btn>\n        </Form>\n     \n      <FilmList>\n        {searchMove &&\n          searchMove.map(({ id, title, poster_path }) => (\n            <FilmItem key={id}>\n              <FilmLink key={id} to={`/movies/${id}`} state={{ from: location }}>\n                <Img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : DefaultImg\n                  }\n                  alt={title}\n                  width=\"200\"\n                  height=\"auto\"\n                />\n                <Name>{title}</Name>\n              </FilmLink>\n            </FilmItem>\n          ))}\n      </FilmList>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '5257856f789bada50296aabdc3a8b8f3';\n\n// Запит на список найпопулярніших\nexport const getMoveTrending = async () => {\n  try {\n    const fetchLink = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n    const response = await axios.get(fetchLink);\n    return response;\n  } catch (error) {\n    console.error('Oops, there is no movies');\n  }\n};\n\n// Запит за ключовим словом\nexport const getMoveName = async (searchQuery) => {\n  try {\n    const fetchLink = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`;\n    const response = await axios.get(fetchLink);\n    return response;\n  } catch (error) {\n    console.error('Oops, there is no movies');\n  }\n};\n\n// Запит за інформації про фільм по ID\nexport const getMoveInfo = async (movieId) => {\n  try {\n    const fetchLink = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`;\n    const response = await axios.get(fetchLink);\n    return response;\n  } catch (error) {\n    console.error('Oops, there is no movies');\n  }\n};\n\n// Запит за інформації про фільм по ID Cast\nexport const getMoveCast = async (movieId) => {\n  try {\n    const fetchLink = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    const response = await axios.get(fetchLink);\n    return response;\n  } catch (error) {\n    console.error('Oops, there is no movies');\n  }\n};\n\n// Запит за інформації про фільм по ID Reviews\nexport const getMoveReviews = async (movieId) => {\n  try {\n    const fetchLink = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`;\n    const response = await axios.get(fetchLink);\n    return response;\n  } catch (error) {\n    console.error('Oops, there is no movies');\n  }\n};\n"],"names":["useState","searchQuery","setSearchQuery","searchMove","setSearchMove","location","useLocation","useSearchParams","searchParams","setSearchParams","searchMoveName","get","useEffect","trendingMoves","getMoveName","data","newMovis","results","console","error","onSubmit","event","preventDefault","trim","alert","query","type","value","onChange","target","toLowerCase","placeholder","map","id","title","poster_path","to","state","from","src","DefaultImg","alt","width","height","BASE_URL","API_KEY","getMoveTrending","fetchLink","axios","response","getMoveInfo","movieId","getMoveCast","getMoveReviews"],"sourceRoot":""}