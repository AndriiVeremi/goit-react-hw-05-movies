{"version":3,"file":"static/js/247.ea7b9536.chunk.js","mappings":"2OA+CA,UAzCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAEKC,EAAAA,EAAAA,IAAYP,GAFjB,OAERQ,EAFQ,OAGRC,EAAWD,EAAKA,KAAKE,KAC3BN,EAAaK,GAJC,gDAMdE,QAAQC,MAAM,SANA,yDAAH,qDASfN,GACD,GAAE,CAACN,KAGF,SAAC,KAAD,UACIG,EAAUU,OAAS,GACnB,wBAAI,uDACDV,EAAUW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,KAAhC,OACf,UAAC,KAAD,YACE,gBACEC,IAAKH,EAAY,0CACwBA,GACnCI,EAENC,IAAKH,EACLI,MAAM,MACNC,OAAO,UAET,uBAAIL,KACJ,yBAAG,cAAYD,OAXFF,EADA,KAiBxB,C,+LC3CKS,EAAW,gCACXC,EAAU,mCAGHC,EAAe,mCAAG,sGAErBC,EAFqB,UAENH,EAFM,uCAEiCC,GAFjC,SAGJG,EAAAA,EAAAA,IAAUD,GAHN,cAGrBE,EAHqB,yBAIpBA,GAJoB,gCAM3BlB,QAAQC,MAAM,4BANa,yDAAH,qDAWfkB,EAAW,mCAAG,WAAOC,GAAP,yFAEjBJ,EAFiB,UAEFH,EAFE,iCAE+BC,EAF/B,kBAEgDM,GAFhD,SAGAH,EAAAA,EAAAA,IAAUD,GAHV,cAGjBE,EAHiB,yBAIhBA,GAJgB,gCAMvBlB,QAAQC,MAAM,4BANS,yDAAH,sDAWXoB,EAAW,mCAAG,WAAOhC,GAAP,yFAEjB2B,EAFiB,UAEFH,EAFE,iBAEexB,EAFf,oBAEkCyB,GAFlC,SAGAG,EAAAA,EAAAA,IAAUD,GAHV,cAGjBE,EAHiB,yBAIhBA,GAJgB,gCAMvBlB,QAAQC,MAAM,4BANS,yDAAH,sDAWXL,EAAW,mCAAG,WAAOP,GAAP,yFAEjB2B,EAFiB,UAEFH,EAFE,iBAEexB,EAFf,4BAE0CyB,GAF1C,SAGAG,EAAAA,EAAAA,IAAUD,GAHV,cAGjBE,EAHiB,yBAIhBA,GAJgB,gCAMvBlB,QAAQC,MAAM,4BANS,yDAAH,sDAWXqB,EAAc,mCAAG,WAAOjC,GAAP,yFAEpB2B,EAFoB,UAELH,EAFK,iBAEYxB,EAFZ,4BAEuCyB,GAFvC,SAGHG,EAAAA,EAAAA,IAAUD,GAHP,cAGpBE,EAHoB,yBAInBA,GAJmB,gCAM1BlB,QAAQC,MAAM,4BANY,yDAAH,qD","sources":["components/Cast/Cast.jsx","serviceAPI/serviceAPI.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoveCast } from '../../serviceAPI/serviceAPI';\nimport { CatsList, CatsItem } from '../../styled/styled';\nimport DefaultImg from '../../images/noImageV.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [movieCats, setMovieCats] = useState([]);\n\n  useEffect(() => {\n    const catsMoves = async () => {\n      try {\n        const data = await getMoveCast(movieId);\n        const moveCats = data.data.cast;\n        setMovieCats(moveCats);\n      } catch (error) {\n        console.error('error');\n      }\n    };\n    catsMoves();\n  }, [movieId]);\n\n  return (\n    <CatsList>\n       {movieCats.length < 1 ? (\n        <h2>I'm sorry, but I don't have any information casts </h2>\n      ) : (movieCats.map(({ id, profile_path, character, name }) => (\n          <CatsItem key={id}>\n            <img\n              src={profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : DefaultImg\n              }\n              alt={name}\n              width=\"150\"\n              height=\"auto\"\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </CatsItem>\n        )))}\n    </CatsList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '5257856f789bada50296aabdc3a8b8f3';\n\n// Запит на список найпопулярніших\nexport const getMoveTrending = async () => {\n  try {\n    const fetchLink = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n    const response = await axios.get(fetchLink);\n    return response;\n  } catch (error) {\n    console.error('Oops, there is no movies');\n  }\n};\n\n// Запит за ключовим словом\nexport const getMoveName = async (searchQuery) => {\n  try {\n    const fetchLink = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`;\n    const response = await axios.get(fetchLink);\n    return response;\n  } catch (error) {\n    console.error('Oops, there is no movies');\n  }\n};\n\n// Запит за інформації про фільм по ID\nexport const getMoveInfo = async (movieId) => {\n  try {\n    const fetchLink = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`;\n    const response = await axios.get(fetchLink);\n    return response;\n  } catch (error) {\n    console.error('Oops, there is no movies');\n  }\n};\n\n// Запит за інформації про фільм по ID Cast\nexport const getMoveCast = async (movieId) => {\n  try {\n    const fetchLink = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    const response = await axios.get(fetchLink);\n    return response;\n  } catch (error) {\n    console.error('Oops, there is no movies');\n  }\n};\n\n// Запит за інформації про фільм по ID Reviews\nexport const getMoveReviews = async (movieId) => {\n  try {\n    const fetchLink = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`;\n    const response = await axios.get(fetchLink);\n    return response;\n  } catch (error) {\n    console.error('Oops, there is no movies');\n  }\n};\n"],"names":["movieId","useParams","useState","movieCats","setMovieCats","useEffect","catsMoves","getMoveCast","data","moveCats","cast","console","error","length","map","id","profile_path","character","name","src","DefaultImg","alt","width","height","BASE_URL","API_KEY","getMoveTrending","fetchLink","axios","response","getMoveName","searchQuery","getMoveInfo","getMoveReviews"],"sourceRoot":""}